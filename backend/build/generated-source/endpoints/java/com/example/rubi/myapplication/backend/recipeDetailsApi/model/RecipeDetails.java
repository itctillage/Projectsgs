/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2015-03-26 20:30:19 UTC)
 * on 2015-04-13 at 13:24:47 UTC 
 * Modify at your own risk.
 */

package com.example.rubi.myapplication.backend.recipeDetailsApi.model;

/**
 * Model definition for RecipeDetails.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the recipeDetailsApi. For a detailed explanation see:
 * <a href="http://code.google.com/p/google-http-java-client/wiki/JSON">http://code.google.com/p/google-http-java-client/wiki/JSON</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class RecipeDetails extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String cookingName;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Text directions;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long id;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private BlobKey image;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("image_url")
  private java.lang.String imageUrl;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Text ingredients;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private Text nutritionFacts;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long seafoodSpeciesId;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("youtube_url")
  private Link youtubeUrl;

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getCookingName() {
    return cookingName;
  }

  /**
   * @param cookingName cookingName or {@code null} for none
   */
  public RecipeDetails setCookingName(java.lang.String cookingName) {
    this.cookingName = cookingName;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * @param description description or {@code null} for none
   */
  public RecipeDetails setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public Text getDirections() {
    return directions;
  }

  /**
   * @param directions directions or {@code null} for none
   */
  public RecipeDetails setDirections(Text directions) {
    this.directions = directions;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getId() {
    return id;
  }

  /**
   * @param id id or {@code null} for none
   */
  public RecipeDetails setId(java.lang.Long id) {
    this.id = id;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public BlobKey getImage() {
    return image;
  }

  /**
   * @param image image or {@code null} for none
   */
  public RecipeDetails setImage(BlobKey image) {
    this.image = image;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getImageUrl() {
    return imageUrl;
  }

  /**
   * @param imageUrl imageUrl or {@code null} for none
   */
  public RecipeDetails setImageUrl(java.lang.String imageUrl) {
    this.imageUrl = imageUrl;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public Text getIngredients() {
    return ingredients;
  }

  /**
   * @param ingredients ingredients or {@code null} for none
   */
  public RecipeDetails setIngredients(Text ingredients) {
    this.ingredients = ingredients;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public Text getNutritionFacts() {
    return nutritionFacts;
  }

  /**
   * @param nutritionFacts nutritionFacts or {@code null} for none
   */
  public RecipeDetails setNutritionFacts(Text nutritionFacts) {
    this.nutritionFacts = nutritionFacts;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getSeafoodSpeciesId() {
    return seafoodSpeciesId;
  }

  /**
   * @param seafoodSpeciesId seafoodSpeciesId or {@code null} for none
   */
  public RecipeDetails setSeafoodSpeciesId(java.lang.Long seafoodSpeciesId) {
    this.seafoodSpeciesId = seafoodSpeciesId;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public Link getYoutubeUrl() {
    return youtubeUrl;
  }

  /**
   * @param youtubeUrl youtubeUrl or {@code null} for none
   */
  public RecipeDetails setYoutubeUrl(Link youtubeUrl) {
    this.youtubeUrl = youtubeUrl;
    return this;
  }

  @Override
  public RecipeDetails set(String fieldName, Object value) {
    return (RecipeDetails) super.set(fieldName, value);
  }

  @Override
  public RecipeDetails clone() {
    return (RecipeDetails) super.clone();
  }

}
